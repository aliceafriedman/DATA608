fig <- plot_geo(slice,
locationmode = 'USA-states',
add_text(x = -78, y = 47, text = ~Year, color = I("black")))
fig <- fig %>% add_trace(
z = ~Crude.Rate, locations = ~State,
color = ~Crude.Rate, colors = 'Purples',
hovertemplate = paste('<b>State</b></i>: ', slice$State, '<br>',
'<i><b>Deaths per 100k: ', slice$Crude.Rate, '</b></i><br>',
'Population: ', format(slice$Population, big.mark=","), '<br>',
'Total Deaths: ', slice$Deaths)
)
fig <- fig %>% layout(
#title = fig_title,
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
),
showlegend = FALSE
)
return(fig)
}
miniFIG(filter(slice, Year==2010))
library(plotly)
library(dplyr)
#load data
df <- read.csv('data/cleaned-cdc-mortality-1999-2010-2.csv')
df$State <- factor(df$State)
df <- df %>% arrange(ICD.Chapter, -Crude.Rate)
cause <- "Certain infectious and parasitic diseases"
slice <- df %>% filter(ICD.Chapter == cause) %>% group_by(Year)
miniFIG <- function(slice){
fig <- plot_geo(slice,
locationmode = 'USA-states',
add_text(x = -78, y = 47, text = ~Year, color = I("black")))
fig <- fig %>% add_trace(
z = ~Crude.Rate,
locations = ~State,
color = ~Crude.Rate,
colors = 'Purples',
hovertemplate = paste('<b>State</b></i>: ', slice$State, '<br>',
'<i><b>Deaths per 100k: ', slice$Crude.Rate, '</b></i><br>',
'Population: ', format(slice$Population, big.mark=","), '<br>',
'Total Deaths: ', slice$Deaths)
)
fig <- fig %>% layout(
#title = fig_title,
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
),
showlegend = FALSE
)
return(fig)
}
df_fig <- slice %>% do(mafig = miniFIG(.))
fig <- df_fig %>% subplot(nrows = 3)
#load data
df <- read.csv('data/cleaned-cdc-mortality-1999-2010-2.csv')
df$State <- factor(df$State)
df <- df %>% arrange(ICD.Chapter, -Crude.Rate)
cause <- "Certain infectious and parasitic diseases"
slice <- df %>% filter(ICD.Chapter == cause) %>% group_by(Year)
miniFIG <- function(slice){
fig <- plotly::plot_geo(slice,
locationmode = 'USA-states',
add_text(x = -78, y = 47, text = ~Year, color = I("black")))
fig <- fig %>% plotly::add_trace(
z = ~Crude.Rate,
locations = ~State,
color = ~Crude.Rate,
colors = 'Purples',
hovertemplate = paste('<b>State</b></i>: ', slice$State, '<br>',
'<i><b>Deaths per 100k: ', slice$Crude.Rate, '</b></i><br>',
'Population: ', format(slice$Population, big.mark=","), '<br>',
'Total Deaths: ', slice$Deaths)
)
fig <- fig %>% plotly::layout(
#title = fig_title,
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
),
showlegend = FALSE
)
return(fig)
}
df_fig <- slice %>% do(mafig = miniFIG(.))
miniFIG <- function(slice){
fig <- plotly::plot_geo(slice,
locationmode = 'USA-states'#,
#add_text(x = -78, y = 47, text = ~Year, color = I("black"))
)
fig <- fig %>% plotly::add_trace(
z = ~Crude.Rate,
locations = ~State,
color = ~Crude.Rate,
colors = 'Purples',
hovertemplate = paste('<b>State</b></i>: ', slice$State, '<br>',
'<i><b>Deaths per 100k: ', slice$Crude.Rate, '</b></i><br>',
'Population: ', format(slice$Population, big.mark=","), '<br>',
'Total Deaths: ', slice$Deaths)
)
fig <- fig %>% plotly::layout(
#title = fig_title,
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
),
showlegend = FALSE
)
return(fig)
}
df_fig <- slice %>% do(mafig = miniFIG(.))
fig <- df_fig %>% subplot(nrows = 3)
fig <- fig %>% layout(
showlegend = FALSE
)
fig
miniFIG <- function(slice){
fig <- plotly::plot_geo(slice,
locationmode = 'USA-states'#,
#add_text(x = -78, y = 47, text = ~Year, color = I("black"))
)
fig <- fig %>% plotly::add_trace(
z = ~Crude.Rate,
locations = ~State,
color = ~Crude.Rate,
colors = 'Purples',
hovertemplate = paste('<b>State</b></i>: ', slice$State, '<br>',
'<i><b>Deaths per 100k: ', slice$Crude.Rate, '</b></i><br>',
'Population: ', format(slice$Population, big.mark=","), '<br>',
'Total Deaths: ', slice$Deaths)
)
fig <- fig %>% plotly::layout(
title = Year,
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
),
showlegend = FALSE
)
return(fig)
}
df_fig <- slice %>% do(mafig = miniFIG(.))
miniFIG <- function(slice){
fig <- plotly::plot_geo(slice,
locationmode = 'USA-states'#,
#add_text(x = -78, y = 47, text = ~Year, color = I("black"))
)
fig <- fig %>% plotly::add_trace(
z = ~Crude.Rate,
locations = ~State,
color = ~Crude.Rate,
colors = 'Purples',
hovertemplate = paste('<b>State</b></i>: ', slice$State, '<br>',
'<i><b>Deaths per 100k: ', slice$Crude.Rate, '</b></i><br>',
'Population: ', format(slice$Population, big.mark=","), '<br>',
'Total Deaths: ', slice$Deaths)
)
fig <- fig %>% plotly::layout(
title = slice$Year,
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
),
showlegend = FALSE
)
return(fig)
}
df_fig <- slice %>% do(mafig = miniFIG(.))
fig <- df_fig %>% subplot(nrows = 3)
fig <- fig %>% layout(
showlegend = FALSE
)
fig
miniFIG <- function(slice){
fig <- plotly::plot_geo(slice,
locationmode = 'USA-states'#,
#add_text(x = -78, y = 47, text = ~Year, color = I("black"))
)
fig <- fig %>% plotly::add_trace(
z = ~Crude.Rate,
locations = ~State,
color = ~Crude.Rate,
colors = 'Purples',
hovertemplate = paste('<b>State</b></i>: ', slice$State, '<br>',
'<i><b>Deaths per 100k: ', slice$Crude.Rate, '</b></i><br>',
'Population: ', format(slice$Population, big.mark=","), '<br>',
'Total Deaths: ', slice$Deaths)
)
fig <- fig %>% plotly::layout(
title = slice$Year,
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
),
showlegend = FALSE
)
fig <- fig %>% add_annotations(
text = slice$Year,
xref = "x",
yref = "y",
ax = 20,
ay = -40,
# Styling annotations' text:
font = list(color = '#264E86',
family = 'sans serif',
size = 14))
return(fig)
}
df_fig <- slice %>% do(mafig = miniFIG(.))
fig <- df_fig %>% subplot(nrows = 3)
fig <- fig %>% layout(
showlegend = FALSE
)
fig
miniFIG <- function(slice){
fig <- plotly::plot_geo(slice,
locationmode = 'USA-states'#,
#add_text(x = -78, y = 47, text = ~Year, color = I("black"))
)
fig <- fig %>% plotly::add_trace(
z = ~Crude.Rate,
locations = ~State,
color = ~Crude.Rate,
colors = 'Purples',
hovertemplate = paste('<b>State</b></i>: ', slice$State, '<br>',
'<i><b>Deaths per 100k: ', slice$Crude.Rate, '</b></i><br>',
'Population: ', format(slice$Population, big.mark=","), '<br>',
'Total Deaths: ', slice$Deaths)
)
fig <- fig %>% plotly::layout(
title = slice$Year,
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
fig <- fig %>% plotly::layout(
showlegend = FALSE
)
return(fig)
}
df_fig <- slice %>% do(mafig = miniFIG(.))
fig <- df_fig %>% subplot(nrows = 3)
miniFIG <- function(slice){
fig <- plotly::plot_geo(slice,
locationmode = 'USA-states'#,
#add_text(x = -78, y = 47, text = ~Year, color = I("black"))
)
fig <- fig %>% plotly::add_trace(
z = ~Crude.Rate,
locations = ~State,
color = ~Crude.Rate,
colors = 'Purples',
hovertemplate = paste('<b>State</b></i>: ', slice$State, '<br>',
'<i><b>Deaths per 100k: ', slice$Crude.Rate, '</b></i><br>',
'Population: ', format(slice$Population, big.mark=","), '<br>',
'Total Deaths: ', slice$Deaths)
)
fig <- fig %>% plotly::layout(
title = slice$Year,
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
fig <- fig %>% plotly::layout(
showlegend = FALSE
)
return(fig)
}
df_fig <- slice %>% do(mafig = miniFIG(.))
fig <- df_fig %>% subplot(nrows = 3)
fig
miniFIG <- function(slice){
fig <- plotly::plot_geo(slice,
locationmode = 'USA-states'#,
#add_text(x = -78, y = 47, text = ~Year, color = I("black"))
)
fig <- fig %>% plotly::add_trace(
showscale = FALSE,
z = ~Crude.Rate,
locations = ~State,
color = ~Crude.Rate,
colors = 'Purples',
hovertemplate = paste('<b>State</b></i>: ', slice$State, '<br>',
'<i><b>Deaths per 100k: ', slice$Crude.Rate, '</b></i><br>',
'Population: ', format(slice$Population, big.mark=","), '<br>',
'Total Deaths: ', slice$Deaths)
)
fig <- fig %>% plotly::layout(
title = slice$Year,
geo = list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
)
return(fig)
}
df_fig <- slice %>% do(mafig = miniFIG(.))
fig <- df_fig %>% subplot(nrows = 3)
fig
miniFIG <- function(slice){
fig <- plotly::plot_geo(slice,
locationmode = 'USA-states'#,
#add_text(x = -78, y = 47, text = ~Year, color = I("black"))
)
fig <- fig %>% plotly::add_trace(
showscale = FALSE,
z = ~Crude.Rate,
locations = ~State,
color = ~Crude.Rate,
colors = 'Purples',
hovertemplate = paste('<b>State</b></i>: ', slice$State, '<br>',
'<i><b>Deaths per 100k: ', slice$Crude.Rate, '</b></i><br>',
'Population: ', format(slice$Population, big.mark=","), '<br>',
'Total Deaths: ', slice$Deaths)
)
fig <- fig %>% plotly::layout(
title = slice$Year
)
return(fig)
}
g <-list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
df_fig <- slice %>% do(mafig = miniFIG(.) %>% layout(geo=g))
fig <- df_fig %>% subplot(nrows = 3) %>% layout(geo = g, geo2 = g)
fig
fig <- df_fig %>% subplot(nrows = 3) %>% layout(showscale = TRUE)
fig
fig <- df_fig %>% subplot(nrows = 3) %>% add_trace(showscale = TRUE)
fig <- df_fig %>% subplot(nrows = 3) %>% add_trace(showscale = TRUE)
fig
df_fig <- slice %>% do(mafig = miniFIG(.) %>% layout(geo=g))
fig <- df_fig %>% subplot(nrows = 3)
fig
#define function to generate one figures
miniFIG <- function(slice){
fig <- plotly::plot_geo(slice,
locationmode = 'USA-states',
add_text(x = -78, y = 47, text = ~Year, color = I("black"))
)
fig <- fig %>% plotly::add_trace(
showscale = FALSE,
z = ~Crude.Rate,
locations = ~State,
color = ~Crude.Rate,
colors = 'Purples',
hovertemplate = paste('<b>State</b></i>: ', slice$State, '<br>',
'<i><b>Deaths per 100k: ', slice$Crude.Rate, '</b></i><br>',
'Population: ', format(slice$Population, big.mark=","), '<br>',
'Total Deaths: ', slice$Deaths)
)
fig <- fig %>% plotly::layout(
title = slice$Year
)
return(fig)
}
g <-list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
df_fig <- slice %>% do(mafig = miniFIG(.) %>% layout(geo=g))
#define function to generate one figures
miniFIG <- function(slice){
fig <- plotly::plot_geo(slice,
locationmode = 'USA-states'
)
fig <- fig %>% plotly::add_trace(
showscale = FALSE,
z = ~Crude.Rate,
locations = ~State,
color = ~Crude.Rate,
colors = 'Purples',
hovertemplate = paste('<b>State</b></i>: ', slice$State, '<br>',
'<i><b>Deaths per 100k: ', slice$Crude.Rate, '</b></i><br>',
'Population: ', format(slice$Population, big.mark=","), '<br>',
'Total Deaths: ', slice$Deaths)
)
fig <- fig %>% plotly::layout(
title = slice$Year
)
return(fig)
}
g <-list(
scope = 'usa',
projection = list(type = 'albers usa'),
showlakes = TRUE,
lakecolor = toRGB('white')
)
df_fig <- slice %>% do(mafig = miniFIG(.) %>% layout(geo=g))
fig <- df_fig %>% subplot(nrows = 3)
fig
shiny::runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
LINE <- function(slice){
fig <- plot_ly(slice, x = ~Year, y = ~Crude.Rate, type = 'scatter', mode = 'lines')
fig
}
#test params
cause <- "Certain infectious and parasitic diseases"
slice <- df %>% filter(ICD.Chapter == cause)
LINE(slice)
slice
slice <- df %>% filter(ICD.Chapter == cause, State = 'NV')
slice <- df %>% filter(ICD.Chapter == cause, State == 'NV')
LINE(slice)
slice
slice <- df %>% filter(ICD.Chapter == cause, State == 'NV') %>% arrange(Year)
LINE(slice)
runApp()
shiny::runApp()
runApp()
#############
#test
cause <- "Pregnancy, childbirth and the puerperium"
#############
#test
cause <- "Pregnancy, childbirth and the puerperium"
dft <- df %>% dplyr::filter(ICD.Chapter == cause)
unique(dft$State)
library(tidyr)
dft <- df %>% dplyr::filter(ICD.Chapter == cause) %>% drop_na()
unique(dft$State)
dft
#############
#test
cause <- "Pregnancy, childbirth and the puerperium"
#dft <- df %>% dplyr::filter(ICD.Chapter == cause)
state_list <- c("AK", "TX", "AL")
LINE(cause, state_list)
LINE <- function(cause, state_list){
usa <- USA %>%
dplyr::filter(ICD.Chapter==cause) %>%
ungroup() %>% group_by(Year) %>%
dplyr::filter(ICD.Chapter == cause) %>%
select(Year, State, Crude.Rate) %>%
cast(Year ~ State, fill=NA)
fig <- plot_ly(usa,
x = ~Year,
y = ~USA,
type = 'scatter',
mode = 'lines',
name="USA Average",
line = list(width = 4)
)  %>%
layout(yaxis = list(rangemode = "tozero"))
for (state in state_list){
print(state)
fig <- fig %>%
add_trace(x = ~Year,
y = as.formula(paste0("~`", state, "`")),
name = state,
mode = 'lines',
line = list(width = 1)
)
}
#print(head(usa))
return(fig)
}
#############
#test
cause <- "Pregnancy, childbirth and the puerperium"
#dft <- df %>% dplyr::filter(ICD.Chapter == cause)
state_list <- c("AK", "TX", "AL")
LINE(cause, state_list)
usa <- USA %>%
dplyr::filter(ICD.Chapter==cause) %>%
ungroup() %>% group_by(Year) %>%
dplyr::filter(ICD.Chapter == cause) %>%
select(Year, State, Crude.Rate) %>%
cast(Year ~ State, fill=NA)
usa
dft <- df %>% dplyr::filter(ICD.Chapter == cause)
dft$State
dft %>% filter(State == 'AK')
unique(dft$State)
runApp()
runApp()
runApp()
runApp()
